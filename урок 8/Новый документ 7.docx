Первый уровень.

Функциональное, нефункциональное и связанное с изменениями тестирование - это разные типы тестирования ПО, которые имеют свои особенности и ограничения.

Функциональное тестирование:

Что проверяется: функциональность ПО и его соответствие требованиям.
Когда применяется: в конце разработки или после каждого релиза.
Ограничения: проверка только тех требований, которые были заданы.
Особенности: автоматизация, возможность повторения тестов, проверка конкретной функциональности.

Нефункциональное тестирование:

Что проверяется: качество ПО, такое как производительность, безопасность, удобство использования.
Когда применяется: в течение всего процесса разработки, а также после каждого релиза.
Ограничения: требует тестирования в различных условиях и сценариях, что может быть дорого и сложно.
Особенности: уникальный набор тестов для каждой категории качества, возможность оценки пользовательского опыта.

Тестирование связанное с изменениями:

Что проверяется: влияние изменений на функциональность ПО.
Когда применяется: после каждого изменения или обновления ПО.
Ограничения: требуется быстрая реакция на изменения, чтобы избежать проблем в продакшене.
Особенности: автоматизация тестирования, проверка только тех частей ПО, которые изменились, повторное использование ранее созданных тестов.


2. Регрессионное тестирование и ретестирование - это два разных типа тестирования, которые используются для проверки ПО на ошибки. Регрессионное тестирование проверяет, что новые изменения в коде не привели к появлению новых ошибок в уже протестированных функциях. Ретестирование же проверяет исправленные ошибки. Регрессионное тестирование может быть автоматизировано, а ретестирование часто проводится вручную. Регрессионное тестирование помогает избежать появления новых ошибок в коде после изменений, тогда как ретестирование проверяет только исправленные ошибки. Регрессионное тестирование проверяет всё ПО, а ретестирование только ту часть, где были найдены ошибки. Регрессионное тестирование часто проводится в процессе разработки, а ретестирование - перед выпуском ПО.


Второй уровень

1.  Для проверки продукта иногда достаточно только функционального тестирования, если продукт не имеет необходимости в выполнении нефункциональных требований. Но в большинстве случаев продукты должны соответствовать не только функциональным, но и нефункциональным требованиям, таким как производительность, надежность, безопасность, доступность и т.д. Нефункциональное тестирование играет важную роль в обеспечении высокого качества ПО и позволяет обнаружить потенциальные проблемы перед его выпуском. Поэтому, хотя теоретически возможно провести только функциональное тестирование продукта, на практике для обеспечения высокого качества ПО необходимо проводить и функциональное, и нефункциональное тестирование.

2. Дымовое тестирование - это первый этап тестирования программного обеспечения, который проверяет, работает ли программа на базовом уровне. Это полезно для больших и сложных проектов, где могут возникать критические ошибки. Однако для маленьких и простых проектов это может быть избыточным. Если используется непрерывная интеграция и автоматизированное тестирование, то дымовое тестирование может уже быть включено в этот процесс и не требует дополнительных шагов.

Третий уровень

Тест-кейс на загрузку фотографий котиков:
Шаги:
Открыть приложение;
Нажать на кнопку "Загрузить фото";
Выбрать фото с котиком на устройстве;
Нажать на кнопку "Загрузить";
Проверить, что фотография успешно загружена и отображается в ленте.

      2) Тест-кейс на запрет загрузки фотографий других животных/людей/объектов:
Шаги:
Открыть приложение;
Нажать на кнопку "Загрузить фото";
Выбрать фото с другим животным/человеком/объектом на устройстве;
Нажать на кнопку "Загрузить";
Проверить, что появилось сообщение о запрете загрузки фотографии.

      3) Тест-кейс на добавление друзей:
Шаги:
Открыть приложение;
Перейти на страницу профиля;
Нажать на кнопку "Добавить друзей";
Ввести имя пользователя в поле поиска;
Нажать на кнопку "Добавить в друзья";
Проверить, что пользователь успешно добавлен в список друзей.

      4) Тест-кейс на ставку "лайков":
Шаги:
Открыть приложение;
Выбрать фотографию котика в ленте;
Нажать на кнопку "Лайк";
Проверить, что количество лайков увеличилось на 1.

      5) Тест-кейс на оставление комментариев:
Шаги:
Открыть приложение;
Выбрать фотографию котика в ленте;
Нажать на кнопку "Комментарий";
Написать текст комментария;
Нажать на кнопку "Отправить";
Проверить, что комментарий успешно добавлен к фотографии.
